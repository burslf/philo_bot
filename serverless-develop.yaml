app: philo-bot
service: server
useDotenv: true
frameworkVersion: '3'

provider:
  name: aws
  stage: develop
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'lambda:InvokeFunction'
            - 'lambda:UpdateFunctionConfiguration'
            - 'lambda:GetFunction'
            - 'lambda:listAliases'
            - 'lambda:listVersionsByFunction'
            - 'lambda:deleteFunction'
            - 'lambda:listLayerVersions'
            - 'lambda:GetLayerVersion'
            - 'lambda:deleteLayerVersion'
          Resource:
            - '*'
        - Effect: 'Allow'
          Action:
            - 'sqs:*'
          Resource:
            - '*'

functions:
  philo_server:
    handler: src/server/server.server
    events:
      - httpApi: '*'
    layers:
      - ${env:LAMBDA_HANDLER_LAYER_ARN}

  philo_queue:
    handler: src/monitors/philo_queue.philo_queue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PhiloQueue
              - Arn
          batchSize: 1
    timeout: 600
    layers:
      - ${env:LAMBDA_HANDLER_LAYER_ARN}

resources:
  Resources:
    PhiloQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: philo-queue_${opt:stage, self:provider.stage}
        VisibilityTimeout: 600

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

package:
  patterns:
    - '!.env/**'
    - '!node_modules/**'

custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.json'